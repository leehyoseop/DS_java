
public class YMain1 {
	public static void main(String[] args) {
		//컴퓨터의 장치!
		//CPU / RAM / HDD / GPU
		//CPU : 연산장치(Intel : i5~~ i3~~ i7~~ / AMD : ryzenX)
		//HDD(SSD) : 파일형태 저장장치 
		//		-> 영구저장
		// RAM : 변수형태로 저장(장치)
		//		-> 임시저장
		// GPU : 그래픽처리용 (CPU + HDD + RAM)
		//데이터를 임시보존 -> RAM에 변수로 저장!
		//데이터를 영구보존 -> HDD에 파일로 저장!
		//		-> 도대체 변수라는게 뭐야!
		//syso로 글자나 숫자를 출력했을때 -> 휘발성(1회용임)
		//		-> 재사용이 되지않는다.
		System.out.println();
		//계산을 하다가 마지막에 계산된 값들이 100줄뒤에 필요하다면?
		
		//변수!(variable) : 데이터를 저장하는 공간
		//왜 사용하는가? : X 언제?
		//좀 더 쉽게 말하자면 데이터를 담는 그릇
		
		//변수 문법(어떻게 사용하는지?)
		//		1.변수 선언(만들기)
		//RAM에 공간을 확보해서 무언가를 담을 수 있는 공간을 만든다!
		//		(자료형 변수명;)의 형태를 변수를 선언했다라고 표현
		//		(그릇종류 그릇이름);
		
		//		2.변수 초기화
		//변수에 값을 넣어줘야 하는데...
		//	(변수명=값;)의 형태로 표현
		//	-자료형 : 변수가 어떤 값으로 저장할지 그 형태
		//	String s; : 문자열(String)을 담을 그릇 s
		//	int i; : 정수(int)를 담을 그릇 i
		//		
		//		변수 선언과 초기화 동시에 하는것도 가능하다!
		//		(자료형 변수명 = 값;)의 형태
		//		-> 이 형태를 변수를 만든다! 라고 표현하기로~
		
		//변수이름 규칙
		//	1. 숫자로 시작하면 에러!
		// int 3i = 2;
		//	2. 특수문자, 띄어쓰기 에러!
		//	String s = "ㅋㅋ";
		//	3. 자바 문법(예약어) 사용하면 에러!
		// int int = 3;
		// int _int = 3; _를 써서 에러 방지하는 방법이 있다.
		//	4. 변수명을 봐도 뭔지 알 수 있게!
		int age = 3;
		//	5. 가독성을 위해서 (띄어쓰기가 필요할 때)
		//		뱀체
		int price_of_computer = 10000;
		//		낙타체
		int priceOfComputer = 10000;
		//	6. 한글 X !
		
		//	= : 대입연산자
		//	변수를 만들었을때 = 에 대해 살펴봐야...
		//	A = B 현실에서는 A와 B가 같다.
		//	프로그래밍에서는 A에다가 B를 넣어라!
		
		
		// -자료형
		// bit : 데이터를 나타내는 최소단위
		//	binary digit(이진수)
		//	모든 데이터가 0,1의 조합으로 구성되는데,
		// 이때 0,1의 값이 하나의 bit가 되는 셈!
		
		// -기본형		
		// 	정수 : byte : -128 ~ 127 (0때문에 128이 아니라 127) 
		//		  short : 약 -3만 ~ 3만 
		//		  int : 약 -21억 ~ 약 21억
		//		  long : int를 벗어나는 범위
		//		  첫번째 부호비트
		// 	실수 : float
		//		  double (v)
		//		  다른 언어: float / JAVA 한정 :ㅣ double
		// 	문자 : char
		// 	논리 : boolean은 참/거짓(true/false)
		// 	없음 : void '없음' (나중에 알아보자)
		
		// -참조형
		//	기본형이 아닌 것들은 다 참조형이라고 보면된다
		//	대표적으로 String : 문자열(여러 글자)를 저장, 꼭 앞에 대문자 S!!!
		//	
		//	char VS String
		char c = 'ㅋ'; //한글자를 담는다. 큰따옴표가 아닌 작은따옴표를 사용해주어야한다
		System.out.println(c);
		String s = "zxczxcxzcxz";
		// 변수 선언 후 값넣기!
		int num;
		num = 17;
		
		int floor;
		floor = 5;
		
		//floor = 5.5; //int 형인데 실수가 들어가서 에러
		
		// 변수 선언과 동시에 초기화 설정하기!
		int num2 = 2;
		//int floor2 = "five"; //당연히 안됨
		double subway = 9;
		System.out.println(subway); // 실수형 안에는 정수만 넣어줘도 가능 double안에 int 가능
		
		// 자료형을 쓰면 변수만드는것까지 포함
		int a = 10; // 변수 a라는 만들기 + a에 10 넣기
		//int a;
		//int a=10;
		
		//자료형을 안쓰면 값 수정
		//b = 20;
		
		//python : 자바보다 고급언어(개발자가 손봐줄 필요가 없다, 언어가 자동으로)
		//	 자료형을 Python이 알아서 선택
		// a = 10; // 변수가 없으면 a를 만들어서 10을넣고,
		// a = 10; // 변수가 있으면 a값을 바꾸는
		
		// 변수끼리도 계산이 가능함!
		System.out.println(num + floor);
		
		//RAM의 구조(메모리의 영역) 1.? 
		//					   2.Stack 프로그램이 끝나면 자동으로 정리
		//						밑에서부터 차곡차곡쌓이는						
		//					   3. Heap 프로그램이 끝나도 여전히 남아있음
		//						컴퓨터가 적당하다고 판단한 어떠한 위치에 만들어버림(번지)
		//
		//	Garbage Collection : Heap 영역 자동정리 시스템
		
		boolean abc = 1;
		System.out.println(abc);
		
		
 	}
}